{"version":3,"sources":["images/header_mob.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","posts","1","title","caption","cover","images","2","3","4","5","6","7","8","9","10","Navbar","props","className","Home","animateIn","animateOut","src","logo","alt","Object","keys","map","item","FeedPost","post","data","to","BlogPost","match","params","id","console","log","onClick","history","goBack","App","useState","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f84a71bc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header_mob.216e6951.png\";","import React,{ useState } from 'react';\nimport logo from './images/header_mob.png';\nimport './App.css';\nimport ScrollAnimation from 'react-animate-on-scroll';\nimport ScrollMemory from 'react-router-scroll-memory';\nimport \"animate.css/animate.min.css\";\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\n\n\n\nconst posts={\n              1:{\n                title: \"Deepika\",\n                caption: \"Prompt: describe a colour without using the name. \",\n                cover : \"https://imgur.com/vlO4lkU.jpg\",\n                images : [],\n              },\n              2:{\n                title: \"Dancers\",\n                caption: \"Prompt: describe a colour without using the name. \",\n                cover : \"https://imgur.com/CmUBYYh.jpg\",\n                images : [],\n              },\n              3:{\n                  title: \"Darkness\",\n                  caption: \"Prompt: what does tenderness mean to you? ⁣(I might've gotten too emoshe and overly personal while writing this, but what is poetry if not overly personal?) \",\n                  cover : \"https://imgur.com/ExWuHIH.jpg\",\n                  images : [],\n              },\n              4:{\n                title: \"Lion of colors\",\n                caption: \"Together, these three are used as ingredients in a face mask or scrub commonly used in Indian households.⁣\",\n                cover : \"https://imgur.com/J9MF8IK.jpg\",\n                images : [\"https://imgur.com/vlO4lkU.jpg\",\"https://imgur.com/CmUBYYh.jpg\",\"https://imgur.com/ExWuHIH.jpg\"]\n              },\n              5:{\n                title: \"The Mask\",\n                caption: \"Prompt: describe a colour without using the name. \",\n                cover : \"https://imgur.com/7j58ESS.jpg\",\n                images : [],\n              },\n              6:{\n                title: \"Describe\",\n                caption: \"Prompt: describe a colour without using the name. \",\n                cover : \"https://imgur.com/wrD5iJo.jpg\",\n                images : [],\n              },\n              7:{\n                  title: \"Tenderness\",\n                  caption: \"Prompt: what does tenderness mean to you? ⁣(I might've gotten too emoshe and overly personal while writing this, but what is poetry if not overly personal?) \",\n                  cover : \"https://imgur.com/r9MLtwh.jpg\",\n                  images : [],\n              },\n              8:{\n                title: \"Face Mask\",\n                caption: \"Together, these three are used as ingredients in a face mask or scrub commonly used in Indian households.⁣\",\n                cover : \"https://imgur.com/A5Ui1Mk.jpg\",\n                images : [],\n              },\n              9:{\n                  title: \"Counting\",\n                  caption: \"So since I was three days behind, I figured I'd post two today and two tomorrow, and (hopefully) be back to regular programming from Day 5. And this is one I'm kind of *really* proud of.\",\n                  cover : \"https://imgur.com/l6UujMM.jpg\",\n                  images : [],\n              },\n              10:{\n                  title: \"Lessons in a Letter\",\n                  caption: \"First post! I wanted to attempt to do #napowrimo this year, i.e 30 days of poetry.\",\n                  cover : \"https://imgur.com/0rDySId.jpg\",\n                  images : [],\n              },\n            };\n\nfunction Navbar(props){\n  return(\n    <div className=\"navbar\">\n    <b className=\"sketchy\">SKETCHY</b><b className=\"rhymes\">RHYM.ES</b>\n    </div>\n  );\n}\nfunction Home(){\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      <ScrollAnimation animateIn=\"fadeIn\" animateOut=\"fadeOut\">\n        <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <span className=\"scrollDown\">SCROLL DOWN</span>\n      </header>\n      </ScrollAnimation>\n      <section className=\"blog\">       \n        {Object.keys(posts).map(item => <FeedPost post={item}/>)}\n      </section>\n      <footer>\n        Crafted with <b>love</b> by Shikhar\n      </footer>\n    </div>\n  );\n}\nfunction App() {\n  const [post, setPost] = useState(-1);\n  return (\n    <div className=\"App\">\n      <Router>\n        <div>\n          <ScrollMemory />\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/post/:id\" component={BlogPost} />\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nfunction FeedPost(props){\n  const data=posts[props.post];\n  return(\n    <ScrollAnimation className=\"blogPost\" animateOut=\"fadeOut\" animateIn=\"fadeIn\">\n    <div >\n      <b>{data.title}</b>\n      <Link to={`post/${props.post}`}><img src={data.cover}/></Link>\n      <p>{data.caption}</p>\n    </div>\n    </ScrollAnimation>\n  );\n}\n\nfunction BlogPost(props){\n  const data=posts[props.match.params.id];\n  console.log(\"Sfgfsg\");\n  \n  return(\n    <div className=\"blogPage\">\n      <div className=\"postTopSection\">\n        <button className=\"backButton mob\" onClick={props.history.goBack}>Go Back</button>\n        <b className=\"titleText mob\">{data.title}</b>\n        <div className=\"postImages\">\n          <img src={data.cover}/>\n          {data.images.map(item=><img src={item}/>)}\n        </div>\n      </div>\n      <section className=\"textContent\">\n        <button className=\"backButton nonmob\" onClick={props.history.goBack}>Go Back</button>\n        <b className=\"titleText nonmob\">{data.title}</b>\n        <p className=\"caption\">{data.caption}</p>\n      </section>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}