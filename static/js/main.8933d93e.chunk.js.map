{"version":3,"sources":["images/header_mob.png","firebase/firebase.js","Admin.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","storage","Admin","props","useState","useEffect","console","log","className","path","exact","component","AdminPage","AdminEdit","posts","setPosts","ref","once","snapshot","val","to","Object","keys","sort","reverse","map","item","title","caption","poemId","setPoemId","setTitle","setCaption","cover","setCover","coverURL","setCoverURL","images","setImages","imageURLs","setImageURLs","poem","setPoem","sketch","setSketch","rhyme","setRhyme","saveEnabled","setSaveEnabled","match","params","id","dataRef","text","uploadImages","a","i","child","name","put","on","getDownloadURL","then","url","prev","length","uploadPost","post","set","alert","enteredRef","push","history","type","disabled","value","onChange","e","target","src","files","onClick","imageURL","filter","remImage","multiple","checked","Home","headImg","React","createRef","header","blogger","thenavigation","sketchNav","rhymeNav","showSketches","setShowSketches","showRhymes","setShowRhymes","location","state","handleScroll","window","pageYOffset","current","classList","add","remove","addEventListener","removeListener","removeEventListener","onScroll","logo","alt","FeedPost","rem","postRef","data","scrollTo","offsetTop","BlogPost","setData","undefined","split","App","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8933d93e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/header_mob.216e6951.png\";","// Firebase App (the core Firebase SDK) is always required and\n// must be listed before other Firebase SDKs\nimport * as firebase from \"firebase/app\";\n\n// Add the Firebase services that you want to use\nimport \"firebase/database\";\n// Add the Firebase services that you want to use\nimport \"firebase/storage\";\n\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDbPyJdwBCo6cPwNh0j3u2RYFkuFJXHjls\",\n  authDomain: \"sketchyrhymes.firebaseapp.com\",\n  databaseURL: \"https://sketchyrhymes.firebaseio.com\",\n  projectId: \"sketchyrhymes\",\n  storageBucket: \"sketchyrhymes.appspot.com\",\n  messagingSenderId: \"127981771828\",\n  appId: \"1:127981771828:web:34e76f0d5d956b05\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nconst database = firebase.database();\nconst storage = firebase.storage();\n\nexport {\n    database , storage, firebase\n}","import React, { useState, useEffect } from 'react';\nimport \"./Admin.css\";\nimport { database, storage } from './firebase/firebase'\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\n\n\n\nexport default function Admin(props) {\n\tconst [post, setPost] = useState(-1);\n\tuseEffect(() => {\n\t\tconsole.log(\"sdf\");\n\t}, []);\n\treturn (\n\t\t<div className=\"adminPages\">\n\t\t\t<Router>\n\t\t\t\t<div>\n\t\t\t\t\t<Route path=\"/admin/\" exact component={AdminPage} />\n\t\t\t\t\t<Route path=\"/admin/edit/:id?\" component={AdminEdit} />\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t</div>\n\t);\n}\n\nfunction AdminPage(props) {\n\tconst [posts, setPosts] = useState({});\n\tuseEffect(() => {\n\t\tconsole.log(\"sdf\");\n\t\tlet postsRef = database.ref('/');\n\t\tpostsRef.once('value', (snapshot) => setPosts(snapshot.val()));\n\t}, []);\n\n\n\treturn (\n\t\t<div>\n\t\t\t<h1 className=\"adminHeader\">Hellu, beautiful</h1>\n\t\t\t<Link className=\"newPostLink\" to={`/admin/edit/`}><span className=\"newPostButton\">Add New Post</span></Link>\n\t\t\t<ul className=\"adminListOfPosts\">\n\t\t\t\t{\n\t\t\t\t\tposts === null\n\t\t\t\t\t\t? null\n\t\t\t\t\t\t: <div>{Object.keys(posts).sort().reverse().map(item => <li><Link to={`/admin/edit/${item}`}><b>{posts[item].title}</b><br/><i>{posts[item].caption}</i></Link></li>)}</div>\n\t\t\t\t}\n\n\t\t\t</ul>\n\t\t</div>\n\t);\n}\n\nfunction AdminEdit(props) {\n\tconst [poemId, setPoemId] = useState(false);\n\tconst [title, setTitle] = useState(\"\");\n\tconst [caption, setCaption] = useState(\"\");\n\tconst [cover, setCover] = useState({});\n\tconst [coverURL, setCoverURL] = useState(\"\");\n\tconst [images, setImages] = useState([]);\n\tconst [imageURLs, setImageURLs] = useState([]);\n\tconst [poem, setPoem] = useState(\"\");\n\tconst [sketch, setSketch] = useState(0);\n\tconst [rhyme, setRhyme] = useState(0);\n\tconst [saveEnabled,setSaveEnabled] = useState(true);\n\tuseEffect(() => {\n\t\tif (!props.match.params.id)\n\t\t\treturn;\n\t\tlet dataRef = database.ref(`/${props.match.params.id}`);\n\t\tif (dataRef) {\n\t\t\tdataRef.once('value', (snapshot) => {\n\t\t\t\t// setTimestampId(props.match.params.id);\n\t\t\t\tsetPoemId(props.match.params.id || '')\n\t\t\t\tsetTitle(snapshot.val().title || '')\n\t\t\t\tsetCaption(snapshot.val().caption || '')\n\t\t\t\tsetCoverURL(snapshot.val().cover || '')\n\t\t\t\tsetImageURLs(snapshot.val().images || [])\n\t\t\t\tsetPoem(snapshot.val().text || '')\n\t\t\t\tsetSketch(snapshot.val().sketch || false)\n\t\t\t\tsetRhyme(snapshot.val().rhyme || false)\n\t\t\t});\n\t\t}\n\t}, []);\n\tconst uploadCover = () => {\n\t\tif (cover) {\n\t\t\tlet uploadTask = storage.ref().child(`images/${cover.name}`).put(cover);\n\t\t\tuploadTask.on('state_changed',\n\t\t\t\t() => { },\n\t\t\t\t() => { },\n\t\t\t\t() => {\n\t\t\t\t\tstorage.ref().child(`images/${cover.name}`).getDownloadURL().then(\n\t\t\t\t\t\turl => {\n\t\t\t\t\t\t\tsetCoverURL(url);\n\t\t\t\t\t\t\talert(\"uploaded\")\n\t\t\t\t\t\t}\n\t\t\t\t\t)\n\t\t\t\t});\n\t\t}\n\t}\n\tconst uploadImages = async () => {\n\t\tif (images) {\n\t\t\tfor (let i = 0; i < images.length; i++) {\n\t\t\t\tconst cover = images[i];\n\t\t\t\tlet uploadTask = storage.ref().child(`images/${cover.name}`).put(cover);\n\t\t\t\tuploadTask.on('state_changed',\n\t\t\t\t\t() => { },\n\t\t\t\t\t() => { },\n\t\t\t\t\t() => {\n\t\t\t\t\t\tstorage.ref().child(`images/${cover.name}`).getDownloadURL().then(\n\t\t\t\t\t\t\turl => {\n\t\t\t\t\t\t\t\tsetImageURLs(prev => [...prev, url]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t}\n\t}\n\tfunction remImage(imageURL) {\n\t\tconsole.log(\"hey\");\n\t\tsetImageURLs(prev => prev.filter((url) => url !== imageURL));\n\t}\n\n\tconst uploadPost = async () => {\n\t\tif(!saveEnabled){\n\t\t\treturn;\n\t\t}\n\t\tsetSaveEnabled(false);\n\t\tconst post = {\n\t\t\t\"caption\": caption,\n\t\t\t\"cover\": coverURL,\n\t\t\t\"text\": poem,\n\t\t\t\"title\": title,\n\t\t\t\"sketch\": sketch,\n\t\t\t\"rhyme\": rhyme,\n\t\t\t\"images\": imageURLs\n\t\t};\n\t\tif(poemId){\n\t\t\tawait database.ref(poemId).set(post)\n\t\t\talert(\"Added your data/changes baby\")\n\t\t}\n\t\telse{\n\t\t\tconst enteredRef = database.ref('/').push();\n\t\t\tawait enteredRef.set(post);\n\t\t\talert(\"Added your data/changes baby\")\n\t\t\tprops.history.push(`/admin/`);\n\t\t\t// setPoemId()\n\t\t\t// alert(\"Added your data/changes baby\")\n\t\t}\n\n\t\tsetSaveEnabled(true);\n\t}\n\n\treturn (\n\t\t<div className=\"adminForm\">\n\t\t\tPoem ID<br />\n\t\t\t<input type=\"text\" disabled={poemId!==''?true:false} value={poemId} onChange={e => setPoemId(e.target.value)} /><br />\n\t\t\tTitle<br />\n\t\t\t<input type=\"text\" value={title} onChange={e => setTitle(e.target.value)} /><br />\n\t\t\tCaption<br />\n\t\t\t<input type=\"text\" value={caption} onChange={e => setCaption(e.target.value)} /><br />\n\t\t\tCover<br />\n\t\t\t{coverURL ? <img src={coverURL} /> : \"\"}\n\t\t\t<br />\n\t\t\t<input type=\"file\" onChange={e => setCover(e.target.files[0])} />\n\t\t\t<button onClick={uploadCover}>Upload</button><br /><br /><br />\n\t\t\tOther Images<br />\n\t\t\t{imageURLs ? imageURLs.map(imageURL => <div className=\"imageUploaded\"><img src={imageURL} /><button onClick={() => remImage(imageURL)}>X</button></div>) : \"\"}\n\t\t\t<br />\n\t\t\t<input type=\"file\" onChange={e => setImages(e.target.files)} multiple />\n\t\t\t<button onClick={uploadImages}>Upload</button><br />\n\t\t\t<br />\n\t\t\t<br />\n\t\t\tPoem/Text<br />\n\t\t\t<textarea value={poem} onChange={e => setPoem(e.target.value)}></textarea><br />\n\t\t\t<input type=\"checkbox\" onChange={e => setSketch(e.target.checked)} checked={sketch == 1 ? \"checked\" : \"\"} />Sketch<br />\n\t\t\t<input type=\"checkbox\" onChange={e => setRhyme(e.target.checked)} checked={rhyme == 1 ? \"checked\" : \"\"} />Rhyme<br />\n\t\t\t<br /><br />\n\t\t\t<button className=\"saveButton\" onClick={uploadPost}>SAVE</button>\n\n\t\t</div>\n\t);\n}\n\n\n","import React,{ useEffect,useState } from 'react';\nimport logo from './images/header_mob.png';\nimport './App.css';\nimport { HashRouter as Router, Route, Link } from \"react-router-dom\";\nimport Admin from \"./Admin.js\";\nimport {database} from \"./firebase/firebase.js\"\n\nfunction Home(props){\n  let headImg = React.createRef();\n  let header = React.createRef();\n  let blogger = React.createRef();\n  let thenavigation = React.createRef();\n  let sketchNav = React.createRef();\n  let rhymeNav = React.createRef();\n\n\n  const [showSketches,setShowSketches]=useState(1);\n  const [showRhymes,setShowRhymes]=useState(1);\n  const [posts,setPosts]=useState(null);\n\n  useEffect(() => {\n    console.log(props.location.state);\n    var postsRef = database.ref('/');\n    postsRef.once('value',(snapshot)=>setPosts(snapshot.val()));\n  },[]);\n\n  const toggleSketches=()=>{\n    if(showSketches){\n      setShowSketches(0);\n      sketchNav.current.classList.remove('selectedOption');\n    }\n    else{\n      setShowSketches(1);\n      sketchNav.current.classList.add('selectedOption');\n    }\n    removeListener();\n  }\n  const toggleRhymes=()=>{\n    if(showRhymes){\n      setShowRhymes(0);\n      rhymeNav.current.classList.remove('selectedOption');\n    }\n    else{\n      setShowRhymes(1);\n      rhymeNav.current.classList.add('selectedOption');\n    }\n    removeListener();\n  }\n\n  const handleScroll=()=>{\n    try{\n      if(window.pageYOffset>30){\n        headImg.current.classList.add('hideHeader');\n        thenavigation.current.classList.add('navbarshow');\n        header.current.classList.add('App-with-blueBG');\n        blogger.current.classList.add('blogUp');\n      }\n      else{\n        headImg.current.classList.remove('hideHeader');\n        thenavigation.current.classList.remove('navbarshow');\n        header.current.classList.remove('App-with-blueBG');\n        blogger.current.classList.remove('blogUp');\n      }\n    }\n    catch(e){\n\n    }\n  }\n  window.addEventListener('scroll', handleScroll);\n\n  const removeListener= ()=>window.removeEventListener('scroll',handleScroll);\n\n  return (\n    <div className=\"App\" onScroll={handleScroll}>\n      <div ref={thenavigation} className=\"navbar\">\n        <b className=\"sketchy selectedOption\" ref={sketchNav} onClick={toggleSketches}>SKETCHY</b><b onClick={toggleRhymes} ref={rhymeNav} className=\"rhymes selectedOption\">RHYM.ES</b>\n      </div>\n      <div>\n        <header ref={header} className=\"App-header\">\n          <img ref={headImg} src={logo} className=\"App-logo\" alt=\"logo\" />\n          <span className=\"scrollDown\">SCROLL DOWN</span>\n        </header>\n      </div>\n      <div ref={blogger} className=\"blog\">\n      { \n        posts===null\n        ? null\n        : <div>\n            {Object.keys(posts).sort().reverse().map(item => (posts[item].rhyme&&showRhymes || posts[item].sketch&&showSketches)?<FeedPost location={props.location} rem={removeListener} item={item} post={posts[item]}/>:\"\")}\n          </div>\n      }    \n      </div>\n      \n      \n      <footer>\n        Crafted with <b>love</b> by Shikhar\n      </footer>\n    </div>\n  );\n}\nfunction App() {\n  const [post, setPost] = useState(-1);\n  return (\n    <div className=\"App\">\n      <Router>\n        <div>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/post/:id\" component={BlogPost} />\n          <Route path=\"/admin/\" component={Admin} />\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nfunction FeedPost(props){\n  let postRef = React.createRef();\n\n  const data=props.post;\n  useEffect(()=>{\n    if(props.location.state===props.item)\n      window.scrollTo(0, postRef.current.offsetTop-400);\n  });\n  return(\n    <div ref={postRef} id={props.item} className=\"blogPost\">\n      <span className=\"postType\">{data.sketch?\"SKETCH\":\"RHYME\"}</span>\n      <b>{data.title}</b>\n      <Link onClick={props.rem} to={`post/${props.item}`}><img src={data.cover}/></Link>\n      <p>{data.caption}</p>\n    </div>\n  );\n}\n\nfunction BlogPost(props){\n  const [data,setData]=useState(null);\n\n  \n\n  useEffect(() => {\n    var dataRef = database.ref(`/${props.match.params.id}`);\n    dataRef.once('value', (snapshot)=> setData(snapshot.val()));\n  },[]);\n  if(data===null){\n    return null;\n  }\n  return( \n    <div className=\"blogPage\">\n      <div className=\"postTopSection\">\n      <Link to={{'pathname':'/','state':props.match.params.id}}><button className=\"backButton mob\">Go Back</button></Link>\n        <b className=\"titleText mob\">{data.title}</b>\n        <div className=\"postImages\">\n          <img src={data.cover}/>\n          {data.images===undefined?null:data.images.map(item=><img src={item}/>)}\n        </div>\n      </div>\n      <section className=\"textContent\">\n      <Link to={{'pathname':'/','state':props.match.params.id}}><button className=\"backButton nonmob\">Go Back</button></Link>\n        <b className=\"titleText nonmob\">{data.title}</b>\n        <p className=\"caption\">{data.caption}</p>\n        <p>\n          {data.text.split(\"\\n\").map(item=><span>{item}<br/></span>)}  \n        </p>\n      </section>\n    </div>\n  \n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}